const questions = [
    {
      level: 'easy',
      question: 'O que é uma variável em JavaScript?',
      options: ['Um espaço de armazenamento para dados', 'Uma função', 'Uma biblioteca', 'Uma classe'],
      answer: 'Um espaço de armazenamento para dados',
      explanation: 'Uma variável em JavaScript é usada para armazenar dados que podem ser alterados durante a execução do programa.',
    },
    {
      level: 'easy',
      question: 'Qual é o resultado de 2 + 2 em JavaScript?',
      options: ['22', '4', 'NaN', 'undefined'],
      answer: '4',
      explanation: 'Em JavaScript, 2 + 2 é uma operação aritmética simples que resulta em 4.',
    },
    {
      level: 'easy',
      question: 'Como você cria uma função em JavaScript?',
      options: ['function myFunction() {}', 'func myFunction() {}', 'myFunction() => {}', 'function: myFunction() {}'],
      answer: 'function myFunction() {}',
      explanation: 'Você cria uma função em JavaScript usando a palavra-chave "function" seguida pelo nome da função e parênteses.',
    },
    {
      level: 'easy',
      question: 'Qual símbolo é usado para comentar uma linha em JavaScript?',
      options: ['//', '/*', '#', '<!--'],
      answer: '//',
      explanation: 'Você comenta uma linha em JavaScript usando "//".',
    },
    {
      level: 'easy',
      question: 'Como você declara uma constante em JavaScript?',
      options: ['const myConstant;', 'let myConstant;', 'var myConstant;', 'constant myConstant;'],
      answer: 'const myConstant;',
      explanation: 'Você declara uma constante em JavaScript usando a palavra-chave "const".',
    },
    {
      level: 'medium',
      question: 'Qual é a saída de "typeof NaN" em JavaScript?',
      options: ['number', 'string', 'undefined', 'object'],
      answer: 'number',
      explanation: 'O operador "typeof" em JavaScript retorna "number" para NaN (Not-a-Number).',
    },
    {
      level: 'medium',
      question: 'Qual método converte uma string para um inteiro em JavaScript?',
      options: ['parseInt', 'parseFloat', 'Number', 'toFixed'],
      answer: 'parseInt',
      explanation: 'O método "parseInt" converte uma string em um número inteiro em JavaScript.',
    },
    {
      level: 'medium',
      question: 'Qual é o resultado de "2" + 2 em JavaScript?',
      options: ['4', '22', 'NaN', 'undefined'],
      answer: '22',
      explanation: 'Em JavaScript, quando você adiciona um número a uma string, o número é convertido em string, resultando em "22".',
    },
    {
      level: 'medium',
      question: 'O que o método "push" faz em um array?',
      options: ['Remove o último elemento', 'Adiciona um elemento ao final', 'Adiciona um elemento ao início', 'Remove o primeiro elemento'],
      answer: 'Adiciona um elemento ao final',
      explanation: 'O método "push" adiciona um ou mais elementos ao final de um array e retorna o novo comprimento do array.',
    },
    {
      level: 'medium',
      question: 'Como você verifica se uma variável "x" é igual a 10 e de tipo "number"?',
      options: ['x == 10', 'x = 10', 'x === 10', 'x !== 10'],
      answer: 'x === 10',
      explanation: 'O operador "===" verifica se os valores são iguais e de mesmo tipo.',
    },
    {
      level: 'hard',
      question: 'Qual é a diferença entre "==" e "===" em JavaScript?',
      options: [
        'Nenhuma diferença',
        '"==" compara valores, "===" compara valores e tipos',
        '"===" compara valores, "==" compara valores e tipos',
        'Ambos comparam apenas valores',
      ],
      answer: '"==" compara valores, "===" compara valores e tipos',
      explanation: 'O operador "==" compara valores, enquanto "===" compara valores e tipos, garantindo que ambos sejam iguais em valor e tipo.',
    },
    {
      level: 'hard',
      question: 'Como você declara uma função em JavaScript?',
      options: ['function myFunction() {}', 'myFunction = function() {}', 'function: myFunction() {}', 'func myFunction() {}'],
      answer: 'function myFunction() {}',
      explanation: 'Uma função em JavaScript pode ser declarada usando a sintaxe "function myFunction() {}".',
    },
    {
      level: 'hard',
      question: 'O que o método "call" faz em JavaScript?',
      options: ['Chama uma função com um dado "this" e argumentos', 'Invoca uma função assíncrona', 'Declara uma nova variável', 'Cria uma nova classe'],
      answer: 'Chama uma função com um dado "this" e argumentos',
      explanation: 'O método "call" invoca uma função com um dado valor "this" e argumentos passados individualmente.',
    },
    {
      level: 'hard',
      question: 'Qual é a diferença entre "var", "let" e "const" em JavaScript?',
      options: ['Não há diferença', 'var é global/function scoped, let e const são block scoped', 'let e const são globais, var é local', 'var e const são iguais'],
      answer: 'var é global/function scoped, let e const são block scoped',
      explanation: '"var" tem escopo global ou de função, enquanto "let" e "const" têm escopo de bloco.',
    },
    {
      level: 'hard',
      question: 'O que o método "bind" faz em JavaScript?',
      options: ['Cria uma nova função com um dado valor "this"', 'Liga dois arrays', 'Invoca uma função', 'Remove um evento'],
      answer: 'Cria uma nova função com um dado valor "this"',
      explanation: 'O método "bind" cria uma nova função que, quando chamada, tem seu "this" definido para o valor fornecido.',
    },
  ];
  
  export default questions;
  